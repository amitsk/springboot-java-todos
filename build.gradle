buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

ext {
    restAssuredVersion = '3.0.6'
    jacksonVersion = '2.9.4'
    junitJupiterVersion = '5.2.0-M1'
    log4jVersion = '2.10.0'
    resilience4jVersion = '0.12.1'
    springCloudSleuthVersion = '2.0.0.RC2'
    retrofitVersion = '2.4.0'
    reactorAdapterVersion = '2.1.0'
    backstopperVersion = '0.11.5'
    assertJVersion = '3.9.1'
    mockitoVersion = '2.16.0'
    mockWebServerVersion = '3.10.0'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'project-report'

group = 'com.github.amitsk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
    jcenter()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.cloud:spring-cloud-starter-sleuth')
	compile('org.springframework.retry:spring-retry')
	compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'tomcat-embed-core'
    }
	compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('io.projectreactor.ipc:reactor-netty')
    compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
    compileOnly('org.projectlombok:lombok')
    compile "com.fasterxml.jackson.module:jackson-modules-java8:${jacksonVersion}"
    compile "com.nike.backstopper:backstopper-core:$backstopperVersion"
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    compile "io.github.resilience4j:resilience4j-circuitbreaker:$resilience4jVersion"
    compile "io.github.resilience4j:resilience4j-cache:$resilience4jVersion"
    compile "io.github.resilience4j:resilience4j-reactor:$resilience4jVersion"
    compile "com.jakewharton.retrofit:retrofit2-reactor-adapter:$reactorAdapterVersion"

    //Start Test deps
	testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
	testCompile('io.projectreactor:reactor-test')
    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testCompile ("io.rest-assured:rest-assured:${restAssuredVersion}")
    testCompile "org.assertj:assertj-core:$assertJVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-sleuth:${springCloudSleuthVersion}"
	}
}

test {
    testLogging {
        showStandardStreams = true
    }
    useJUnitPlatform {
        // includeTags 'fast'
        excludeTags 'slow'

        // includeEngines 'junit-jupiter', 'junit-vintage'
        // excludeEngines 'custom-engine'
    }
}

