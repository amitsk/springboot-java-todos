plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.2'
}


ext {
    set('springCloudVersion', "2023.0.1")
    restAssuredVersion = '5.4.0'
    jacksonVersion = '2.16.1'
    junitJupiterVersion = '5.10.2'
    resilience4jVersion = '2.2.0'
    retrofitVersion = '2.11.0'
    reactorAdapterVersion = '2.1.0'
    backstopperVersion = '0.15.1'
    assertJVersion = '3.25.3'
    mockitoVersion = '5.11.0'
    mockWebServerVersion = '4.12.0'
}

group = 'com.github.amitsk'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}


repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation('io.projectreactor.addons:reactor-extra')

    implementation "com.nike.backstopper:backstopper-core:$backstopperVersion"
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    // https://mvnrepository.com/artifact/jakarta.el/jakarta.el-api
    implementation 'jakarta.el:jakarta.el-api:6.0.0'
    implementation 'org.glassfish:jakarta.el:5.0.0-M1'
    // Tracing
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.projectreactor:reactor-core-micrometer'


    // JUnit Jupiter API and TestEngine implementation
    testCompileOnly("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompileOnly("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testCompileOnly("io.rest-assured:rest-assured:${restAssuredVersion}")
    testCompileOnly "org.assertj:assertj-core:$assertJVersion"
    testCompileOnly "org.mockito:mockito-core:$mockitoVersion"
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    // To avoid compiler warnings about @API annotations in JUnit code

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
    useJUnitPlatform()
}

