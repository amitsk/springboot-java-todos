plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.2'
}


ext {
    restAssuredVersion = '5.4.0'
    jacksonVersion = '2.16.1'
    junitJupiterVersion = '5.10.2'
    resilience4jVersion = '2.2.0'
    retrofitVersion = '2.11.0'
    reactorAdapterVersion = '2.1.0'
    backstopperVersion = '0.15.1'
    assertJVersion = '3.25.3'
    mockitoVersion = '5.11.0'
    mockWebServerVersion = '4.12.0'
}

group = 'com.github.amitsk'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly('io.projectreactor.addons:reactor-extra')

    implementation "com.nike.backstopper:backstopper-core:$backstopperVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    implementation "io.github.resilience4j:resilience4j-circuitbreaker:$resilience4jVersion"
    implementation "io.github.resilience4j:resilience4j-cache:$resilience4jVersion"
    implementation "io.github.resilience4j:resilience4j-reactor:$resilience4jVersion"
    implementation "com.jakewharton.retrofit:retrofit2-reactor-adapter:$reactorAdapterVersion"


    // JUnit Jupiter API and TestEngine implementation
    testCompileOnly("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompileOnly("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testCompileOnly("io.rest-assured:rest-assured:${restAssuredVersion}")
    testCompileOnly "org.assertj:assertj-core:$assertJVersion"
    testCompileOnly "org.mockito:mockito-core:$mockitoVersion"
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    // To avoid compiler warnings about @API annotations in JUnit code

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}


test {
    testLogging {
        showStandardStreams = true
    }
    useJUnitPlatform()
}

